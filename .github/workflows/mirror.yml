---

name: Mirror

on:
  schedule:
    - cron: "0 4 * * 0"

jobs:
  mirror:
    name: ${{ matrix.package }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - runtime/org.freedesktop.Platform.GL.default/aarch64/20.08
          - runtime/org.freedesktop.Platform.GL.default/x86_64/20.08

    steps:
      - name: Setup (packages)
        run: |
          sudo apt update
          sudo apt install -y ccache flatpak flatpak-builder gir1.2-ostree-1.0 python3-aiohttp python3-gi python3-tenacity xvfb zstd
          sudo rm -rf /var/lib/{apt,dpkg,cache,log}/

          curl https://raw.githubusercontent.com/flatpak/flat-manager/0.3.7/flat-manager-client > ./flat-manager-client
          sudo mv ./flat-manager-client /usr/bin/flat-manager-client
          sudo chown root: /usr/bin/flat-manager-client
          sudo chmod +x /usr/bin/flat-manager-client

      - name: Setup (flathub)
        run: |
          ostree init --repo flathub --mode=archive-z2
          cd flathub

          wget https://flathub.org/repo/flathub.gpg

          ostree remote add flathub https://dl.flathub.org/repo/ --gpg-import ./flathub.gpg

      - name: Setup (appcenter)
        run: |
          ostree init --repo appcenter --mode=archive-z2

      - name: Clone
        run: |
          cd flathub
          ostree pull --mirror --http-trusted --depth -1 flathub ${{ matrix.package }}
          ostree commit -b ${{ matrix.package }}

          cd ..
          flatpak build-commit-from --untrusted --src-repo ./flathub ./appcenter ${{ matrix.package }}

      - name: Create Build
        env:
          REPO_TOKEN: ${{ secrets.FLAT_MANAGER_TOKEN }}
        run: |
          BUILD_ID=`flat-manager-client create https://flatpak-api.elementary.io appcenter`
          echo "build_id=$BUILD_ID" >> $GITHUB_ENV

      - name: Push Build
        env:
          REPO_TOKEN: ${{ secrets.FLAT_MANAGER_TOKEN }}
        run: flat-manager-client push ${{ env.build_id }} ./appcenter

      - name: Commit Build
        env:
          REPO_TOKEN: ${{ secrets.FLAT_MANAGER_TOKEN }}
        run: flat-manager-client commit --wait ${{ env.build_id }}

      - name: Publish Build
        env:
          REPO_TOKEN: ${{ secrets.FLAT_MANAGER_TOKEN }}
        run: flat-manager-client publish --wait ${{ env.build_id }}

      - name: Purge Build
        if: ${{ always() && env.build_id }}
        env:
          REPO_TOKEN: ${{ secrets.FLAT_MANAGER_TOKEN }}
        run: flat-manager-client purge ${{ env.build_id }}
