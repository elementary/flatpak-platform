---

name: Release

on:
  pull_request:
    branches: [main]
    types: [closed]
  workflow_dispatch: {}

env:
  RUNTIME_VERSION: 8.2

jobs:
  publish_platform:
    name: Publish Platform ${{ vars.RUNTIME_VERSION }} (${{ matrix.configuration.name }})
    runs-on: ${{ matrix.configuration.runs-on }}

    strategy:
      fail-fast: false
      matrix:
        configuration:
          - name: x86
            runs-on: ubuntu-22.04
            architecture: x86_64

          - name: ARM
            runs-on: ubuntu-22.04-arm
            architecture: aarch64

    if: github.event.pull_request.merged == true && true == contains(join(github.event.pull_request.labels.*.name), 'Release')

    steps:
      - name: Clean
        # Reserve some space on the / partition to install the needed org.gnome runtimes and their Debug extensions.
        # This probably needs around 10-12GB, the rest of the free space on / then gets assigned to the build directory
        # where we need the most space
        run: |
          echo "Available storage before:"
          sudo df -h
          echo

          echo "Removing Removes .NET runtime and libraries..."
          sudo rm -rf /usr/share/dotnet

          echo "Removing Android SDKs and Tools..."
          sudo rm -rf /usr/local/lib/android

          echo "Removing GHC (Haskell) artifacts..."
          sudo rm -rf /opt/ghc

          echo "Removing CodeQL Action Bundles..."
          sudo rm -rf /opt/hostedtoolcache/CodeQL

          echo "Removing cached Docker images..."
          sudo docker image prune --all --force

          echo "Available storage after:"
          sudo df -h
          echo

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        run: |
          sudo apt update
          sudo apt install -y ccache flatpak flatpak-builder gir1.2-ostree-1.0 meson python3-aiohttp python3-gi python3-tenacity xvfb zstd
          sudo rm -rf /var/lib/{apt,dpkg,cache,log}/

          curl https://raw.githubusercontent.com/flatpak/flat-manager/0.3.7/flat-manager-client > ./flat-manager-client
          sudo mv ./flat-manager-client /usr/bin/flat-manager-client
          sudo chown root: /usr/bin/flat-manager-client
          sudo chmod +x /usr/bin/flat-manager-client

          sudo flatpak remote-add --system --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

      - name: Build
        env:
          DISPLAY: "0:0"
        run: |
          meson setup build -Dbranch=${RUNTIME_VERSION} --cross-file="architectures/${{ matrix.configuration.architecture }}.crossfile"
          sudo xvfb-run --auto-servernum flatpak-builder --arch=${{ matrix.configuration.architecture }} --default-branch="${RUNTIME_VERSION}" --disable-rofiles-fuse --keep-build-dirs --install-deps-from=flathub --ccache --repo=elementary /mnt/builddir ./build/io.elementary.Sdk.json

      - name: Fix Permissions
        run: sudo chown -R runner:docker .

      - name: Create Build
        env:
          REPO_TOKEN: ${{ secrets.FLAT_MANAGER_TOKEN }}
        run: |
          BUILD_ID=`flat-manager-client create https://flatpak-api.elementary.io appcenter`
          echo "build_id=$BUILD_ID" >> $GITHUB_ENV

      - name: Push Build
        env:
          REPO_TOKEN: ${{ secrets.FLAT_MANAGER_TOKEN }}
        run: flat-manager-client push ${{ env.build_id }} ./elementary

      - name: Commit Build
        env:
          REPO_TOKEN: ${{ secrets.FLAT_MANAGER_TOKEN }}
        run: flat-manager-client commit --wait ${{ env.build_id }}

      - name: Publish Build
        env:
          REPO_TOKEN: ${{ secrets.FLAT_MANAGER_TOKEN }}
        run: flat-manager-client publish --wait ${{ env.build_id }}

      - name: Purge Build
        if: ${{ always() && env.build_id }}
        env:
          REPO_TOKEN: ${{ secrets.FLAT_MANAGER_TOKEN }}
        run: flat-manager-client purge ${{ env.build_id }}
